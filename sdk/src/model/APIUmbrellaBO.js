/**
 * 彩虹共享雨金箍棒api
 * Android、iOS操作类
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Api) {
      root.Api = {};
    }
    root.Api.APIUmbrellaBO = factory(root.Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The APIUmbrellaBO model module.
   * @module model/APIUmbrellaBO
   * @version 1.0
   */

  /**
   * Constructs a new <code>APIUmbrellaBO</code>.
   * @alias module:model/APIUmbrellaBO
   * @class
   */
  var exports = function() {
    var _this = this;




















  };

  /**
   * Constructs a <code>APIUmbrellaBO</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/APIUmbrellaBO} obj Optional instance to populate.
   * @return {module:model/APIUmbrellaBO} The populated <code>APIUmbrellaBO</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('agentSource')) {
        obj['agentSource'] = ApiClient.convertToType(data['agentSource'], 'Integer');
      }
      if (data.hasOwnProperty('assetNumber')) {
        obj['assetNumber'] = ApiClient.convertToType(data['assetNumber'], 'String');
      }
      if (data.hasOwnProperty('createTime')) {
        obj['createTime'] = ApiClient.convertToType(data['createTime'], 'Date');
      }
      if (data.hasOwnProperty('electricity')) {
        obj['electricity'] = ApiClient.convertToType(data['electricity'], 'Integer');
      }
      if (data.hasOwnProperty('lamplock')) {
        obj['lamplock'] = ApiClient.convertToType(data['lamplock'], 'Boolean');
      }
      if (data.hasOwnProperty('lastGpsLocationTime')) {
        obj['lastGpsLocationTime'] = ApiClient.convertToType(data['lastGpsLocationTime'], 'Date');
      }
      if (data.hasOwnProperty('lastHeartbeat')) {
        obj['lastHeartbeat'] = ApiClient.convertToType(data['lastHeartbeat'], 'Date');
      }
      if (data.hasOwnProperty('lastLocationTime')) {
        obj['lastLocationTime'] = ApiClient.convertToType(data['lastLocationTime'], 'Date');
      }
      if (data.hasOwnProperty('lat')) {
        obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
      }
      if (data.hasOwnProperty('locationDetails')) {
        obj['locationDetails'] = ApiClient.convertToType(data['locationDetails'], 'String');
      }
      if (data.hasOwnProperty('locationType')) {
        obj['locationType'] = ApiClient.convertToType(data['locationType'], 'Integer');
      }
      if (data.hasOwnProperty('lon')) {
        obj['lon'] = ApiClient.convertToType(data['lon'], 'Number');
      }
      if (data.hasOwnProperty('machineCode')) {
        obj['machineCode'] = ApiClient.convertToType(data['machineCode'], 'String');
      }
      if (data.hasOwnProperty('machineId')) {
        obj['machineId'] = ApiClient.convertToType(data['machineId'], 'Integer');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'Integer');
      }
      if (data.hasOwnProperty('typeCode')) {
        obj['typeCode'] = ApiClient.convertToType(data['typeCode'], 'String');
      }
      if (data.hasOwnProperty('typeId')) {
        obj['typeId'] = ApiClient.convertToType(data['typeId'], 'Integer');
      }
      if (data.hasOwnProperty('typeName')) {
        obj['typeName'] = ApiClient.convertToType(data['typeName'], 'String');
      }
      if (data.hasOwnProperty('updateTime')) {
        obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'Date');
      }
    }
    return obj;
  }

  /**
   * 代理商金箍棒来源 1:平台分配  2：用户归还 
   * @member {Integer} agentSource
   */
  exports.prototype['agentSource'] = undefined;
  /**
   *  雨金箍棒资产编号
   * @member {String} assetNumber
   */
  exports.prototype['assetNumber'] = undefined;
  /**
   * @member {Date} createTime
   */
  exports.prototype['createTime'] = undefined;
  /**
   * 电量
   * @member {Integer} electricity
   */
  exports.prototype['electricity'] = undefined;
  /**
   * 棒开关
   * @member {Boolean} lamplock
   */
  exports.prototype['lamplock'] = undefined;
  /**
   * 最后上报位置时间
   * @member {Date} lastGpsLocationTime
   */
  exports.prototype['lastGpsLocationTime'] = undefined;
  /**
   * 最后心跳时间
   * @member {Date} lastHeartbeat
   */
  exports.prototype['lastHeartbeat'] = undefined;
  /**
   * 最后位置修改时间
   * @member {Date} lastLocationTime
   */
  exports.prototype['lastLocationTime'] = undefined;
  /**
   * 绑的经纬度
   * @member {Number} lat
   */
  exports.prototype['lat'] = undefined;
  /**
   * 位置的详情
   * @member {String} locationDetails
   */
  exports.prototype['locationDetails'] = undefined;
  /**
   * 金箍棒现在所在的位置类型 1 在棒机，2在使用，3在驿站，4在平台 
   * @member {Integer} locationType
   */
  exports.prototype['locationType'] = undefined;
  /**
   * 绑的经纬度
   * @member {Number} lon
   */
  exports.prototype['lon'] = undefined;
  /**
   *  棒机编码 
   * @member {String} machineCode
   */
  exports.prototype['machineCode'] = undefined;
  /**
   * 金箍棒所在棒机的id 
   * @member {Integer} machineId
   */
  exports.prototype['machineId'] = undefined;
  /**
   * 棒机状态 1 正常，2禁用 
   * @member {Integer} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {String} typeCode
   */
  exports.prototype['typeCode'] = undefined;
  /**
   * @member {Integer} typeId
   */
  exports.prototype['typeId'] = undefined;
  /**
   * @member {String} typeName
   */
  exports.prototype['typeName'] = undefined;
  /**
   * @member {Date} updateTime
   */
  exports.prototype['updateTime'] = undefined;



  return exports;
}));


