/**
 * 彩虹共享雨金箍棒api
 * Android、iOS操作类
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/APIFeedbackBO', 'model/APIOrderUmbrellaBuyBO', 'model/Point', 'model/UserCouponBO'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./APIFeedbackBO'), require('./APIOrderUmbrellaBuyBO'), require('./Point'), require('./UserCouponBO'));
  } else {
    // Browser globals (root is window)
    if (!root.Api) {
      root.Api = {};
    }
    root.Api.APIUmOrderBO = factory(root.Api.ApiClient, root.Api.APIFeedbackBO, root.Api.APIOrderUmbrellaBuyBO, root.Api.Point, root.Api.UserCouponBO);
  }
}(this, function(ApiClient, APIFeedbackBO, APIOrderUmbrellaBuyBO, Point, UserCouponBO) {
  'use strict';




  /**
   * The APIUmOrderBO model module.
   * @module model/APIUmOrderBO
   * @version 1.0
   */

  /**
   * Constructs a new <code>APIUmOrderBO</code>.
   * @alias module:model/APIUmOrderBO
   * @class
   */
  var exports = function() {
    var _this = this;



































  };

  /**
   * Constructs a <code>APIUmOrderBO</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/APIUmOrderBO} obj Optional instance to populate.
   * @return {module:model/APIUmOrderBO} The populated <code>APIUmOrderBO</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('beginLocation')) {
        obj['beginLocation'] = Point.constructFromObject(data['beginLocation']);
      }
      if (data.hasOwnProperty('beginLocationDetails')) {
        obj['beginLocationDetails'] = ApiClient.convertToType(data['beginLocationDetails'], 'String');
      }
      if (data.hasOwnProperty('beginTime')) {
        obj['beginTime'] = ApiClient.convertToType(data['beginTime'], 'Date');
      }
      if (data.hasOwnProperty('borrowAgentId')) {
        obj['borrowAgentId'] = ApiClient.convertToType(data['borrowAgentId'], 'Integer');
      }
      if (data.hasOwnProperty('borrowChannel')) {
        obj['borrowChannel'] = ApiClient.convertToType(data['borrowChannel'], 'Integer');
      }
      if (data.hasOwnProperty('borrowMachineCode')) {
        obj['borrowMachineCode'] = ApiClient.convertToType(data['borrowMachineCode'], 'String');
      }
      if (data.hasOwnProperty('borrowMachineId')) {
        obj['borrowMachineId'] = ApiClient.convertToType(data['borrowMachineId'], 'Integer');
      }
      if (data.hasOwnProperty('borrowType')) {
        obj['borrowType'] = ApiClient.convertToType(data['borrowType'], 'String');
      }
      if (data.hasOwnProperty('createTime')) {
        obj['createTime'] = ApiClient.convertToType(data['createTime'], 'Date');
      }
      if (data.hasOwnProperty('doingFeedbacks')) {
        obj['doingFeedbacks'] = ApiClient.convertToType(data['doingFeedbacks'], [APIFeedbackBO]);
      }
      if (data.hasOwnProperty('electricity')) {
        obj['electricity'] = ApiClient.convertToType(data['electricity'], 'Integer');
      }
      if (data.hasOwnProperty('endLocaitonDetails')) {
        obj['endLocaitonDetails'] = ApiClient.convertToType(data['endLocaitonDetails'], 'String');
      }
      if (data.hasOwnProperty('endLocation')) {
        obj['endLocation'] = Point.constructFromObject(data['endLocation']);
      }
      if (data.hasOwnProperty('finishTime')) {
        obj['finishTime'] = ApiClient.convertToType(data['finishTime'], 'Date');
      }
      if (data.hasOwnProperty('fitCoupon')) {
        obj['fitCoupon'] = UserCouponBO.constructFromObject(data['fitCoupon']);
      }
      if (data.hasOwnProperty('isShowBuy')) {
        obj['isShowBuy'] = ApiClient.convertToType(data['isShowBuy'], 'Boolean');
      }
      if (data.hasOwnProperty('lampLock')) {
        obj['lampLock'] = ApiClient.convertToType(data['lampLock'], 'Boolean');
      }
      if (data.hasOwnProperty('mobile')) {
        obj['mobile'] = ApiClient.convertToType(data['mobile'], 'String');
      }
      if (data.hasOwnProperty('nickname')) {
        obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
      }
      if (data.hasOwnProperty('orderCode')) {
        obj['orderCode'] = ApiClient.convertToType(data['orderCode'], 'String');
      }
      if (data.hasOwnProperty('payTime')) {
        obj['payTime'] = ApiClient.convertToType(data['payTime'], 'Date');
      }
      if (data.hasOwnProperty('payType')) {
        obj['payType'] = ApiClient.convertToType(data['payType'], 'String');
      }
      if (data.hasOwnProperty('paymentMark')) {
        obj['paymentMark'] = ApiClient.convertToType(data['paymentMark'], 'String');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('qrCode')) {
        obj['qrCode'] = ApiClient.convertToType(data['qrCode'], 'String');
      }
      if (data.hasOwnProperty('returnAgentId')) {
        obj['returnAgentId'] = ApiClient.convertToType(data['returnAgentId'], 'Integer');
      }
      if (data.hasOwnProperty('returnMachineCode')) {
        obj['returnMachineCode'] = ApiClient.convertToType(data['returnMachineCode'], 'String');
      }
      if (data.hasOwnProperty('returnMachineId')) {
        obj['returnMachineId'] = ApiClient.convertToType(data['returnMachineId'], 'Integer');
      }
      if (data.hasOwnProperty('returnType')) {
        obj['returnType'] = ApiClient.convertToType(data['returnType'], 'String');
      }
      if (data.hasOwnProperty('rideTime')) {
        obj['rideTime'] = ApiClient.convertToType(data['rideTime'], 'Integer');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'Integer');
      }
      if (data.hasOwnProperty('umbrellaBuy')) {
        obj['umbrellaBuy'] = APIOrderUmbrellaBuyBO.constructFromObject(data['umbrellaBuy']);
      }
      if (data.hasOwnProperty('umbrellaCode')) {
        obj['umbrellaCode'] = ApiClient.convertToType(data['umbrellaCode'], 'String');
      }
      if (data.hasOwnProperty('umbrellaId')) {
        obj['umbrellaId'] = ApiClient.convertToType(data['umbrellaId'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/Point} beginLocation
   */
  exports.prototype['beginLocation'] = undefined;
  /**
   * @member {String} beginLocationDetails
   */
  exports.prototype['beginLocationDetails'] = undefined;
  /**
   * 开始时间
   * @member {Date} beginTime
   */
  exports.prototype['beginTime'] = undefined;
  /**
   * 借的代理点
   * @member {Integer} borrowAgentId
   */
  exports.prototype['borrowAgentId'] = undefined;
  /**
   * 借金箍棒的通道号
   * @member {Integer} borrowChannel
   */
  exports.prototype['borrowChannel'] = undefined;
  /**
   * 借的棒机编码
   * @member {String} borrowMachineCode
   */
  exports.prototype['borrowMachineCode'] = undefined;
  /**
   * 借的棒机Id
   * @member {Integer} borrowMachineId
   */
  exports.prototype['borrowMachineId'] = undefined;
  /**
   * 借的类型 machine:棒机, agent:代理点 transfer:转借
   * @member {String} borrowType
   */
  exports.prototype['borrowType'] = undefined;
  /**
   * @member {Date} createTime
   */
  exports.prototype['createTime'] = undefined;
  /**
   * 进行中的投诉
   * @member {Array.<module:model/APIFeedbackBO>} doingFeedbacks
   */
  exports.prototype['doingFeedbacks'] = undefined;
  /**
   * 棒的电量
   * @member {Integer} electricity
   */
  exports.prototype['electricity'] = undefined;
  /**
   * @member {String} endLocaitonDetails
   */
  exports.prototype['endLocaitonDetails'] = undefined;
  /**
   * @member {module:model/Point} endLocation
   */
  exports.prototype['endLocation'] = undefined;
  /**
   * 结束时间
   * @member {Date} finishTime
   */
  exports.prototype['finishTime'] = undefined;
  /**
   * 可用的优惠券
   * @member {module:model/UserCouponBO} fitCoupon
   */
  exports.prototype['fitCoupon'] = undefined;
  /**
   * 是否购买
   * @member {Boolean} isShowBuy
   */
  exports.prototype['isShowBuy'] = undefined;
  /**
   * 棒的灯开关状态
   * @member {Boolean} lampLock
   */
  exports.prototype['lampLock'] = undefined;
  /**
   * 用户手机号
   * @member {String} mobile
   */
  exports.prototype['mobile'] = undefined;
  /**
   * 用户昵称
   * @member {String} nickname
   */
  exports.prototype['nickname'] = undefined;
  /**
   * @member {String} orderCode
   */
  exports.prototype['orderCode'] = undefined;
  /**
   * 支付时间
   * @member {Date} payTime
   */
  exports.prototype['payTime'] = undefined;
  /**
   * 支付类型：免费：free  现金： cash  会员卡：vip  余额：balance   雨金箍棒购卖：umbrella_buy
   * @member {String} payType
   */
  exports.prototype['payType'] = undefined;
  /**
   * @member {String} paymentMark
   */
  exports.prototype['paymentMark'] = undefined;
  /**
   * 价格
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * 二维码
   * @member {String} qrCode
   */
  exports.prototype['qrCode'] = undefined;
  /**
   * 还的代理点
   * @member {Integer} returnAgentId
   */
  exports.prototype['returnAgentId'] = undefined;
  /**
   * 还的棒机code
   * @member {String} returnMachineCode
   */
  exports.prototype['returnMachineCode'] = undefined;
  /**
   * 还的棒机id
   * @member {Integer} returnMachineId
   */
  exports.prototype['returnMachineId'] = undefined;
  /**
   * machine:棒机, agent:代理点 transfer:转借
   * @member {String} returnType
   */
  exports.prototype['returnType'] = undefined;
  /**
   * 订单时间,分钟
   * @member {Integer} rideTime
   */
  exports.prototype['rideTime'] = undefined;
  /**
   * 状态  10:创建中 20: 创建失败 30:进行中 40:未支付 50:已支付 
   * @member {Integer} status
   */
  exports.prototype['status'] = undefined;
  /**
   * 购买记录
   * @member {module:model/APIOrderUmbrellaBuyBO} umbrellaBuy
   */
  exports.prototype['umbrellaBuy'] = undefined;
  /**
   * 金箍棒编号
   * @member {String} umbrellaCode
   */
  exports.prototype['umbrellaCode'] = undefined;
  /**
   * @member {Integer} umbrellaId
   */
  exports.prototype['umbrellaId'] = undefined;



  return exports;
}));


