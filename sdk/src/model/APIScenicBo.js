/**
 * 彩虹共享雨金箍棒api
 * Android、iOS操作类
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/APISensorBo', 'model/APIVoiceBO'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./APISensorBo'), require('./APIVoiceBO'));
  } else {
    // Browser globals (root is window)
    if (!root.Api) {
      root.Api = {};
    }
    root.Api.APIScenicBo = factory(root.Api.ApiClient, root.Api.APISensorBo, root.Api.APIVoiceBO);
  }
}(this, function(ApiClient, APISensorBo, APIVoiceBO) {
  'use strict';




  /**
   * The APIScenicBo model module.
   * @module model/APIScenicBo
   * @version 1.0
   */

  /**
   * Constructs a new <code>APIScenicBo</code>.
   * @alias module:model/APIScenicBo
   * @class
   */
  var exports = function() {
    var _this = this;
























  };

  /**
   * Constructs a <code>APIScenicBo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/APIScenicBo} obj Optional instance to populate.
   * @return {module:model/APIScenicBo} The populated <code>APIScenicBo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('areaId')) {
        obj['areaId'] = ApiClient.convertToType(data['areaId'], 'String');
      }
      if (data.hasOwnProperty('cCode')) {
        obj['cCode'] = ApiClient.convertToType(data['cCode'], 'String');
      }
      if (data.hasOwnProperty('cName')) {
        obj['cName'] = ApiClient.convertToType(data['cName'], 'String');
      }
      if (data.hasOwnProperty('createTime')) {
        obj['createTime'] = ApiClient.convertToType(data['createTime'], 'Date');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Integer');
      }
      if (data.hasOwnProperty('isDaytime')) {
        obj['isDaytime'] = ApiClient.convertToType(data['isDaytime'], 'Boolean');
      }
      if (data.hasOwnProperty('locationAddress')) {
        obj['locationAddress'] = ApiClient.convertToType(data['locationAddress'], 'String');
      }
      if (data.hasOwnProperty('locationDesc')) {
        obj['locationDesc'] = ApiClient.convertToType(data['locationDesc'], 'String');
      }
      if (data.hasOwnProperty('locationLat')) {
        obj['locationLat'] = ApiClient.convertToType(data['locationLat'], 'Number');
      }
      if (data.hasOwnProperty('locationLon')) {
        obj['locationLon'] = ApiClient.convertToType(data['locationLon'], 'Number');
      }
      if (data.hasOwnProperty('pCode')) {
        obj['pCode'] = ApiClient.convertToType(data['pCode'], 'String');
      }
      if (data.hasOwnProperty('pName')) {
        obj['pName'] = ApiClient.convertToType(data['pName'], 'String');
      }
      if (data.hasOwnProperty('readTimes')) {
        obj['readTimes'] = ApiClient.convertToType(data['readTimes'], 'Integer');
      }
      if (data.hasOwnProperty('scenicCover')) {
        obj['scenicCover'] = ApiClient.convertToType(data['scenicCover'], 'String');
      }
      if (data.hasOwnProperty('scenicIntroduct')) {
        obj['scenicIntroduct'] = ApiClient.convertToType(data['scenicIntroduct'], 'String');
      }
      if (data.hasOwnProperty('scenicLinkName')) {
        obj['scenicLinkName'] = ApiClient.convertToType(data['scenicLinkName'], 'String');
      }
      if (data.hasOwnProperty('scenicLinkValue')) {
        obj['scenicLinkValue'] = ApiClient.convertToType(data['scenicLinkValue'], 'String');
      }
      if (data.hasOwnProperty('scenicName')) {
        obj['scenicName'] = ApiClient.convertToType(data['scenicName'], 'String');
      }
      if (data.hasOwnProperty('scenicTitle')) {
        obj['scenicTitle'] = ApiClient.convertToType(data['scenicTitle'], 'String');
      }
      if (data.hasOwnProperty('sensorList')) {
        obj['sensorList'] = ApiClient.convertToType(data['sensorList'], [APISensorBo]);
      }
      if (data.hasOwnProperty('shareTimes')) {
        obj['shareTimes'] = ApiClient.convertToType(data['shareTimes'], 'Integer');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'Integer');
      }
      if (data.hasOwnProperty('voices')) {
        obj['voices'] = ApiClient.convertToType(data['voices'], [APIVoiceBO]);
      }
    }
    return obj;
  }

  /**
   * 所属区域
   * @member {String} areaId
   */
  exports.prototype['areaId'] = undefined;
  /**
   * 城市名称
   * @member {String} cCode
   */
  exports.prototype['cCode'] = undefined;
  /**
   * 城市名称
   * @member {String} cName
   */
  exports.prototype['cName'] = undefined;
  /**
   * 创建时间  
   * @member {Date} createTime
   */
  exports.prototype['createTime'] = undefined;
  /**
   * 景区id
   * @member {Integer} id
   */
  exports.prototype['id'] = undefined;
  /**
   * 是否是白天，true 白天，false 黑夜
   * @member {Boolean} isDaytime
   */
  exports.prototype['isDaytime'] = undefined;
  /**
   * 地址
   * @member {String} locationAddress
   */
  exports.prototype['locationAddress'] = undefined;
  /**
   * 地址详细描述
   * @member {String} locationDesc
   */
  exports.prototype['locationDesc'] = undefined;
  /**
   * 纬度
   * @member {Number} locationLat
   */
  exports.prototype['locationLat'] = undefined;
  /**
   * 经度
   * @member {Number} locationLon
   */
  exports.prototype['locationLon'] = undefined;
  /**
   * 省份编码
   * @member {String} pCode
   */
  exports.prototype['pCode'] = undefined;
  /**
   * 省份名称
   * @member {String} pName
   */
  exports.prototype['pName'] = undefined;
  /**
   * 景区阅读次数
   * @member {Integer} readTimes
   */
  exports.prototype['readTimes'] = undefined;
  /**
   * 景区封面
   * @member {String} scenicCover
   */
  exports.prototype['scenicCover'] = undefined;
  /**
   * 景区介绍
   * @member {String} scenicIntroduct
   */
  exports.prototype['scenicIntroduct'] = undefined;
  /**
   * 外部链接名称
   * @member {String} scenicLinkName
   */
  exports.prototype['scenicLinkName'] = undefined;
  /**
   * 外部链接
   * @member {String} scenicLinkValue
   */
  exports.prototype['scenicLinkValue'] = undefined;
  /**
   * 景区名称
   * @member {String} scenicName
   */
  exports.prototype['scenicName'] = undefined;
  /**
   * 景区标题
   * @member {String} scenicTitle
   */
  exports.prototype['scenicTitle'] = undefined;
  /**
   * 设备列表
   * @member {Array.<module:model/APISensorBo>} sensorList
   */
  exports.prototype['sensorList'] = undefined;
  /**
   * 景区分享次数
   * @member {Integer} shareTimes
   */
  exports.prototype['shareTimes'] = undefined;
  /**
   * 状态 1正常，2禁用 
   * @member {Integer} status
   */
  exports.prototype['status'] = undefined;
  /**
   * 音频文件
   * @member {Array.<module:model/APIVoiceBO>} voices
   */
  exports.prototype['voices'] = undefined;



  return exports;
}));


