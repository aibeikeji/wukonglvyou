/**
 * 彩虹共享雨金箍棒api
 * Android、iOS操作类
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SingleResponseOfAPIUserMoneyCashBO', 'model/SingleResponseOfAPIUserBankCardBO', 'model/CreateBankCardVO', 'model/SimpleResponse', 'model/ListResponseOfAPIUserBankCardBO', 'model/PageResponseOfAPIUserMoneyCashGroupBO', 'model/SingleResponseOfstring'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/SingleResponseOfAPIUserMoneyCashBO'), require('../model/SingleResponseOfAPIUserBankCardBO'), require('../model/CreateBankCardVO'), require('../model/SimpleResponse'), require('../model/ListResponseOfAPIUserBankCardBO'), require('../model/PageResponseOfAPIUserMoneyCashGroupBO'), require('../model/SingleResponseOfstring'));
  } else {
    // Browser globals (root is window)
    if (!root.Api) {
      root.Api = {};
    }
    root.Api.UsermoneycashcontrollerApi = factory(root.Api.ApiClient, root.Api.SingleResponseOfAPIUserMoneyCashBO, root.Api.SingleResponseOfAPIUserBankCardBO, root.Api.CreateBankCardVO, root.Api.SimpleResponse, root.Api.ListResponseOfAPIUserBankCardBO, root.Api.PageResponseOfAPIUserMoneyCashGroupBO, root.Api.SingleResponseOfstring);
  }
}(this, function(ApiClient, SingleResponseOfAPIUserMoneyCashBO, SingleResponseOfAPIUserBankCardBO, CreateBankCardVO, SimpleResponse, ListResponseOfAPIUserBankCardBO, PageResponseOfAPIUserMoneyCashGroupBO, SingleResponseOfstring) {
  'use strict';

  /**
   * Usermoneycashcontroller service.
   * @module api/UsermoneycashcontrollerApi
   * @version 1.0
   */

  /**
   * Constructs a new UsermoneycashcontrollerApi. 
   * @alias module:api/UsermoneycashcontrollerApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the applyUserCashUsingPOST operation.
     * @callback module:api/UsermoneycashcontrollerApi~applyUserCashUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIUserMoneyCashBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 申请提现
     * @param {String} password 提现密码
     * @param {Number} cashAmount 提现金额
     * @param {Integer} bankCardId 银行卡记录id
     * @param {module:api/UsermoneycashcontrollerApi~applyUserCashUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIUserMoneyCashBO}
     */
    this.applyUserCashUsingPOST = function(password, cashAmount, bankCardId, callback) {
      var postBody = null;

      // verify the required parameter 'password' is set
      if (password == undefined || password == null) {
        throw "Missing the required parameter 'password' when calling applyUserCashUsingPOST";
      }

      // verify the required parameter 'cashAmount' is set
      if (cashAmount == undefined || cashAmount == null) {
        throw "Missing the required parameter 'cashAmount' when calling applyUserCashUsingPOST";
      }

      // verify the required parameter 'bankCardId' is set
      if (bankCardId == undefined || bankCardId == null) {
        throw "Missing the required parameter 'bankCardId' when calling applyUserCashUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'password': password,
        'cashAmount': cashAmount,
        'bankCardId': bankCardId
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIUserMoneyCashBO;

      return this.apiClient.callApi(
        '/api/user_money_cash/apply_user_cash', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createBankCardUsingPOST operation.
     * @callback module:api/UsermoneycashcontrollerApi~createBankCardUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIUserBankCardBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 创建银行卡记录
     * @param {module:model/CreateBankCardVO} vo vo
     * @param {module:api/UsermoneycashcontrollerApi~createBankCardUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIUserBankCardBO}
     */
    this.createBankCardUsingPOST = function(vo, callback) {
      var postBody = vo;

      // verify the required parameter 'vo' is set
      if (vo == undefined || vo == null) {
        throw "Missing the required parameter 'vo' when calling createBankCardUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIUserBankCardBO;

      return this.apiClient.callApi(
        '/api/user_money_cash/create_bank_card', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteBankCardUsingPOST operation.
     * @callback module:api/UsermoneycashcontrollerApi~deleteBankCardUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 删除银行卡记录
     * @param {Integer} id id
     * @param {module:api/UsermoneycashcontrollerApi~deleteBankCardUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleResponse}
     */
    this.deleteBankCardUsingPOST = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id == undefined || id == null) {
        throw "Missing the required parameter 'id' when calling deleteBankCardUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'id': id
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/api/user_money_cash/del_bank_card', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the findBankCardUsingGET operation.
     * @callback module:api/UsermoneycashcontrollerApi~findBankCardUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResponseOfAPIUserBankCardBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 银行卡记录
     * @param {module:api/UsermoneycashcontrollerApi~findBankCardUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResponseOfAPIUserBankCardBO}
     */
    this.findBankCardUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListResponseOfAPIUserBankCardBO;

      return this.apiClient.callApi(
        '/api/user_money_cash/bank_card_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the findCashListUsingGET operation.
     * @callback module:api/UsermoneycashcontrollerApi~findCashListUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageResponseOfAPIUserMoneyCashGroupBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 提现列表，createTime 降序排列，分页
     * @param {Object} opts Optional parameters
     * @param {Integer} opts.ltTime 分页时间
     * @param {module:api/UsermoneycashcontrollerApi~findCashListUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageResponseOfAPIUserMoneyCashGroupBO}
     */
    this.findCashListUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'ltTime': opts['ltTime']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PageResponseOfAPIUserMoneyCashGroupBO;

      return this.apiClient.callApi(
        '/api/user_money_cash/cash_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the findDefaultBankCardUsingGET operation.
     * @callback module:api/UsermoneycashcontrollerApi~findDefaultBankCardUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIUserBankCardBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 默认的银行卡记录
     * @param {module:api/UsermoneycashcontrollerApi~findDefaultBankCardUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIUserBankCardBO}
     */
    this.findDefaultBankCardUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIUserBankCardBO;

      return this.apiClient.callApi(
        '/api/user_money_cash/default_bank_card', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getBankNameUsingGET operation.
     * @callback module:api/UsermoneycashcontrollerApi~getBankNameUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfstring} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 根据银行号得到名称
     * @param {String} account account
     * @param {module:api/UsermoneycashcontrollerApi~getBankNameUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfstring}
     */
    this.getBankNameUsingGET = function(account, callback) {
      var postBody = null;

      // verify the required parameter 'account' is set
      if (account == undefined || account == null) {
        throw "Missing the required parameter 'account' when calling getBankNameUsingGET";
      }


      var pathParams = {
      };
      var queryParams = {
        'account': account
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfstring;

      return this.apiClient.callApi(
        '/api/user_money_cash/get_bank_name', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modifyPayPasswordUsingPOST operation.
     * @callback module:api/UsermoneycashcontrollerApi~modifyPayPasswordUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 修改提现密码
     * @param {String} password 密码
     * @param {String} verifycode 验证码
     * @param {module:api/UsermoneycashcontrollerApi~modifyPayPasswordUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleResponse}
     */
    this.modifyPayPasswordUsingPOST = function(password, verifycode, callback) {
      var postBody = null;

      // verify the required parameter 'password' is set
      if (password == undefined || password == null) {
        throw "Missing the required parameter 'password' when calling modifyPayPasswordUsingPOST";
      }

      // verify the required parameter 'verifycode' is set
      if (verifycode == undefined || verifycode == null) {
        throw "Missing the required parameter 'verifycode' when calling modifyPayPasswordUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'password': password,
        'verifycode': verifycode
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/api/user_money_cash/modify_pay_password', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileUsingGET operation.
     * @callback module:api/UsermoneycashcontrollerApi~profileUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIUserMoneyCashBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 提现记录详情
     * @param {String} cashSn 提现编号
     * @param {module:api/UsermoneycashcontrollerApi~profileUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIUserMoneyCashBO}
     */
    this.profileUsingGET = function(cashSn, callback) {
      var postBody = null;

      // verify the required parameter 'cashSn' is set
      if (cashSn == undefined || cashSn == null) {
        throw "Missing the required parameter 'cashSn' when calling profileUsingGET";
      }


      var pathParams = {
      };
      var queryParams = {
        'cashSn': cashSn
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIUserMoneyCashBO;

      return this.apiClient.callApi(
        '/api/user_money_cash/profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the sendModifyPayPasswordVerifycodeUsingPOST operation.
     * @callback module:api/UsermoneycashcontrollerApi~sendModifyPayPasswordVerifycodeUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 修改支付密码发送短信验证码
     * 修改支付密码发送短信验证码
     * @param {module:api/UsermoneycashcontrollerApi~sendModifyPayPasswordVerifycodeUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleResponse}
     */
    this.sendModifyPayPasswordVerifycodeUsingPOST = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/api/user_money_cash/send_modify_pay_password_verifycode', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
