/**
 * 彩虹共享雨金箍棒api
 * Android、iOS操作类
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SimpleResponse', 'model/CompleteOrderVO', 'model/ListResponseOfAPIFaultTypeBO', 'model/PageResponseOfAPIOrderWorkBO', 'model/SingleResponseOfAPIOrderWorkBO'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/SimpleResponse'), require('../model/CompleteOrderVO'), require('../model/ListResponseOfAPIFaultTypeBO'), require('../model/PageResponseOfAPIOrderWorkBO'), require('../model/SingleResponseOfAPIOrderWorkBO'));
  } else {
    // Browser globals (root is window)
    if (!root.Api) {
      root.Api = {};
    }
    root.Api.OrderworkcontrollerApi = factory(root.Api.ApiClient, root.Api.SimpleResponse, root.Api.CompleteOrderVO, root.Api.ListResponseOfAPIFaultTypeBO, root.Api.PageResponseOfAPIOrderWorkBO, root.Api.SingleResponseOfAPIOrderWorkBO);
  }
}(this, function(ApiClient, SimpleResponse, CompleteOrderVO, ListResponseOfAPIFaultTypeBO, PageResponseOfAPIOrderWorkBO, SingleResponseOfAPIOrderWorkBO) {
  'use strict';

  /**
   * Orderworkcontroller service.
   * @module api/OrderworkcontrollerApi
   * @version 1.0
   */

  /**
   * Constructs a new OrderworkcontrollerApi. 
   * @alias module:api/OrderworkcontrollerApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the beginDoingUsingPOST operation.
     * @callback module:api/OrderworkcontrollerApi~beginDoingUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 开始工作
     * @param {String} orderCode orderCode
     * @param {Number} x 经度
     * @param {Number} y 纬度
     * @param {Object} opts Optional parameters
     * @param {String} opts.pointType 坐标系类型,默认百度,百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标
     * @param {module:api/OrderworkcontrollerApi~beginDoingUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleResponse}
     */
    this.beginDoingUsingPOST = function(orderCode, x, y, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'orderCode' is set
      if (orderCode == undefined || orderCode == null) {
        throw "Missing the required parameter 'orderCode' when calling beginDoingUsingPOST";
      }

      // verify the required parameter 'x' is set
      if (x == undefined || x == null) {
        throw "Missing the required parameter 'x' when calling beginDoingUsingPOST";
      }

      // verify the required parameter 'y' is set
      if (y == undefined || y == null) {
        throw "Missing the required parameter 'y' when calling beginDoingUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'orderCode': orderCode,
        'x': x,
        'y': y,
        'pointType': opts['pointType']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/api/order_work/begin_doing', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the completeUsingPOST operation.
     * @callback module:api/OrderworkcontrollerApi~completeUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 完成工单
     * @param {Object} opts Optional parameters
     * @param {module:model/CompleteOrderVO} opts.vo vo
     * @param {module:api/OrderworkcontrollerApi~completeUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleResponse}
     */
    this.completeUsingPOST = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['vo'];


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/api/order_work/complete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the findFaultTypeListUsingGET operation.
     * @callback module:api/OrderworkcontrollerApi~findFaultTypeListUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResponseOfAPIFaultTypeBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 故障类型列表
     * @param {module:api/OrderworkcontrollerApi~findFaultTypeListUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResponseOfAPIFaultTypeBO}
     */
    this.findFaultTypeListUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListResponseOfAPIFaultTypeBO;

      return this.apiClient.callApi(
        '/api/order_work/fault_type_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the findRepairerOrderListUsingGET operation.
     * @callback module:api/OrderworkcontrollerApi~findRepairerOrderListUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageResponseOfAPIOrderWorkBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 维保工单列表,进行中的工单请使用gtTime进行排序,repairerJoinTime 降序
     * @param {Object} opts Optional parameters
     * @param {String} opts.repairerStatus 处理状态：10 待处理，20，已拒接 ，30进行中，40已完成
     * @param {String} opts.completeStatus 处理完成的结果：1 正常，2，异常 
     * @param {String} opts.orderFaultGroup 故障分组
     * @param {String} opts.orderFaultType 故障类型
     * @param {Integer} opts.ltTime repairerJoinTime 小于该时间的数据
     * @param {module:api/OrderworkcontrollerApi~findRepairerOrderListUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageResponseOfAPIOrderWorkBO}
     */
    this.findRepairerOrderListUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'repairerStatus': opts['repairerStatus'],
        'completeStatus': opts['completeStatus'],
        'orderFaultGroup': opts['orderFaultGroup'],
        'orderFaultType': opts['orderFaultType'],
        'ltTime': opts['ltTime']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PageResponseOfAPIOrderWorkBO;

      return this.apiClient.callApi(
        '/api/order_work/repairer_order_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileUsingGET operation.
     * @callback module:api/OrderworkcontrollerApi~profileUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIOrderWorkBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 详情
     * @param {String} orderCode orderCode
     * @param {module:api/OrderworkcontrollerApi~profileUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIOrderWorkBO}
     */
    this.profileUsingGET = function(orderCode, callback) {
      var postBody = null;

      // verify the required parameter 'orderCode' is set
      if (orderCode == undefined || orderCode == null) {
        throw "Missing the required parameter 'orderCode' when calling profileUsingGET";
      }


      var pathParams = {
      };
      var queryParams = {
        'orderCode': orderCode
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIOrderWorkBO;

      return this.apiClient.callApi(
        '/api/order_work/profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the rejectUsingPOST operation.
     * @callback module:api/OrderworkcontrollerApi~rejectUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 拒绝
     * @param {String} orderCode orderCode
     * @param {module:api/OrderworkcontrollerApi~rejectUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleResponse}
     */
    this.rejectUsingPOST = function(orderCode, callback) {
      var postBody = null;

      // verify the required parameter 'orderCode' is set
      if (orderCode == undefined || orderCode == null) {
        throw "Missing the required parameter 'orderCode' when calling rejectUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'orderCode': orderCode
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/api/order_work/reject', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
