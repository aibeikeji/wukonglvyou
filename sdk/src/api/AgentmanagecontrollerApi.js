/**
 * 彩虹共享雨金箍棒api
 * Android、iOS操作类
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PageResponseOfAPIUmbrellaBO', 'model/PageResponseOfAPIUserRebateLogBO', 'model/PageResponseOfAPIAgentReturnUmbrellaBO', 'model/SingleResponseOfAPIAgentManageHomeBO', 'model/SingleResponseOfAPIAgentBO', 'model/SimpleResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/PageResponseOfAPIUmbrellaBO'), require('../model/PageResponseOfAPIUserRebateLogBO'), require('../model/PageResponseOfAPIAgentReturnUmbrellaBO'), require('../model/SingleResponseOfAPIAgentManageHomeBO'), require('../model/SingleResponseOfAPIAgentBO'), require('../model/SimpleResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Api) {
      root.Api = {};
    }
    root.Api.AgentmanagecontrollerApi = factory(root.Api.ApiClient, root.Api.PageResponseOfAPIUmbrellaBO, root.Api.PageResponseOfAPIUserRebateLogBO, root.Api.PageResponseOfAPIAgentReturnUmbrellaBO, root.Api.SingleResponseOfAPIAgentManageHomeBO, root.Api.SingleResponseOfAPIAgentBO, root.Api.SimpleResponse);
  }
}(this, function(ApiClient, PageResponseOfAPIUmbrellaBO, PageResponseOfAPIUserRebateLogBO, PageResponseOfAPIAgentReturnUmbrellaBO, SingleResponseOfAPIAgentManageHomeBO, SingleResponseOfAPIAgentBO, SimpleResponse) {
  'use strict';

  /**
   * Agentmanagecontroller service.
   * @module api/AgentmanagecontrollerApi
   * @version 1.0
   */

  /**
   * Constructs a new AgentmanagecontrollerApi. 
   * @alias module:api/AgentmanagecontrollerApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the findAgentUmbrellaByVOUsingGET operation.
     * @callback module:api/AgentmanagecontrollerApi~findAgentUmbrellaByVOUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageResponseOfAPIUmbrellaBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 代理商拥有的金箍棒列表,update_time 降序排列
     * @param {Object} opts Optional parameters
     * @param {Integer} opts.ltTime 结束时间的排序
     * @param {module:api/AgentmanagecontrollerApi~findAgentUmbrellaByVOUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageResponseOfAPIUmbrellaBO}
     */
    this.findAgentUmbrellaByVOUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'ltTime': opts['ltTime']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PageResponseOfAPIUmbrellaBO;

      return this.apiClient.callApi(
        '/api/agent_manage/agent_umbrella_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the findRebateLogUsingGET operation.
     * @callback module:api/AgentmanagecontrollerApi~findRebateLogUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageResponseOfAPIUserRebateLogBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 代理商归收益记录,sendTime 降序排列
     * @param {Object} opts Optional parameters
     * @param {String} opts.rebateType 收益类型：&#39;BORROW&#39;借,&#39;RETURN&#39;还
     * @param {Integer} opts.beginTime 开始时间
     * @param {Integer} opts.endTime 结束时间
     * @param {Integer} opts.ltTime 收益时间分页
     * @param {module:api/AgentmanagecontrollerApi~findRebateLogUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageResponseOfAPIUserRebateLogBO}
     */
    this.findRebateLogUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'rebateType': opts['rebateType'],
        'beginTime': opts['beginTime'],
        'endTime': opts['endTime'],
        'ltTime': opts['ltTime']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PageResponseOfAPIUserRebateLogBO;

      return this.apiClient.callApi(
        '/api/agent_manage/rebate_log_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the findReturnUmbrellaUsingGET operation.
     * @callback module:api/AgentmanagecontrollerApi~findReturnUmbrellaUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageResponseOfAPIAgentReturnUmbrellaBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 代理商归还金箍棒记录,createTime 降序排列
     * @param {Object} opts Optional parameters
     * @param {String} opts.returnType 归还的类型，machine 棒机, repairer 平台
     * @param {Integer} opts.beginTime 开始时间
     * @param {Integer} opts.endTime 结束时间
     * @param {Integer} opts.ltTime 结束时间的排序
     * @param {module:api/AgentmanagecontrollerApi~findReturnUmbrellaUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageResponseOfAPIAgentReturnUmbrellaBO}
     */
    this.findReturnUmbrellaUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'returnType': opts['returnType'],
        'beginTime': opts['beginTime'],
        'endTime': opts['endTime'],
        'ltTime': opts['ltTime']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PageResponseOfAPIAgentReturnUmbrellaBO;

      return this.apiClient.callApi(
        '/api/agent_manage/return_umbrella_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the homeUsingGET operation.
     * @callback module:api/AgentmanagecontrollerApi~homeUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIAgentManageHomeBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 首页
     * @param {module:api/AgentmanagecontrollerApi~homeUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIAgentManageHomeBO}
     */
    this.homeUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIAgentManageHomeBO;

      return this.apiClient.callApi(
        '/api/agent_manage/home', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modifyAgentNameUsingPOST operation.
     * @callback module:api/AgentmanagecontrollerApi~modifyAgentNameUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIAgentBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 修改驿站名称
     * @param {String} agentName 驿站名称
     * @param {module:api/AgentmanagecontrollerApi~modifyAgentNameUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIAgentBO}
     */
    this.modifyAgentNameUsingPOST = function(agentName, callback) {
      var postBody = null;

      // verify the required parameter 'agentName' is set
      if (agentName == undefined || agentName == null) {
        throw "Missing the required parameter 'agentName' when calling modifyAgentNameUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'agentName': agentName
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIAgentBO;

      return this.apiClient.callApi(
        '/api/agent_manage/modify_agent_name', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modifyAgentPhoneUsingPOST operation.
     * @callback module:api/AgentmanagecontrollerApi~modifyAgentPhoneUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIAgentBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 修改驿站联系电话
     * @param {String} agentPhone 驿站名称
     * @param {module:api/AgentmanagecontrollerApi~modifyAgentPhoneUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIAgentBO}
     */
    this.modifyAgentPhoneUsingPOST = function(agentPhone, callback) {
      var postBody = null;

      // verify the required parameter 'agentPhone' is set
      if (agentPhone == undefined || agentPhone == null) {
        throw "Missing the required parameter 'agentPhone' when calling modifyAgentPhoneUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'agentPhone': agentPhone
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIAgentBO;

      return this.apiClient.callApi(
        '/api/agent_manage/modify_agent_phone', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modifyBusinessTimeUsingPOST operation.
     * @callback module:api/AgentmanagecontrollerApi~modifyBusinessTimeUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIAgentBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 修改驿站营业时间
     * @param {String} businessTime 营业时间
     * @param {module:api/AgentmanagecontrollerApi~modifyBusinessTimeUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIAgentBO}
     */
    this.modifyBusinessTimeUsingPOST = function(businessTime, callback) {
      var postBody = null;

      // verify the required parameter 'businessTime' is set
      if (businessTime == undefined || businessTime == null) {
        throw "Missing the required parameter 'businessTime' when calling modifyBusinessTimeUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'businessTime': businessTime
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIAgentBO;

      return this.apiClient.callApi(
        '/api/agent_manage/modify_business_time', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modifyLocationUsingPOST operation.
     * @callback module:api/AgentmanagecontrollerApi~modifyLocationUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIAgentBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 修改驿站地址
     * @param {Number} lon 经度
     * @param {Number} lat 纬度
     * @param {String} locationAddress 经纬度转换地址
     * @param {String} locationDesc 驿站详细地址
     * @param {Object} opts Optional parameters
     * @param {String} opts.pointType 坐标系类型,默认百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、WGS84
     * @param {module:api/AgentmanagecontrollerApi~modifyLocationUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIAgentBO}
     */
    this.modifyLocationUsingPOST = function(lon, lat, locationAddress, locationDesc, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'lon' is set
      if (lon == undefined || lon == null) {
        throw "Missing the required parameter 'lon' when calling modifyLocationUsingPOST";
      }

      // verify the required parameter 'lat' is set
      if (lat == undefined || lat == null) {
        throw "Missing the required parameter 'lat' when calling modifyLocationUsingPOST";
      }

      // verify the required parameter 'locationAddress' is set
      if (locationAddress == undefined || locationAddress == null) {
        throw "Missing the required parameter 'locationAddress' when calling modifyLocationUsingPOST";
      }

      // verify the required parameter 'locationDesc' is set
      if (locationDesc == undefined || locationDesc == null) {
        throw "Missing the required parameter 'locationDesc' when calling modifyLocationUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'lon': lon,
        'lat': lat,
        'locationAddress': locationAddress,
        'locationDesc': locationDesc,
        'pointType': opts['pointType']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIAgentBO;

      return this.apiClient.callApi(
        '/api/agent_manage/modify_location', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileUsingGET operation.
     * @callback module:api/AgentmanagecontrollerApi~profileUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleResponseOfAPIAgentBO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取代理商详情
     * 获取代理商详情
     * @param {module:api/AgentmanagecontrollerApi~profileUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleResponseOfAPIAgentBO}
     */
    this.profileUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SingleResponseOfAPIAgentBO;

      return this.apiClient.callApi(
        '/api/agent_manage/profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the scanCodeUsingPOST operation.
     * @callback module:api/AgentmanagecontrollerApi~scanCodeUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimpleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 扫码,统一扫码接口
     * @param {String} qrCode 二维码
     * @param {module:api/AgentmanagecontrollerApi~scanCodeUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimpleResponse}
     */
    this.scanCodeUsingPOST = function(qrCode, callback) {
      var postBody = null;

      // verify the required parameter 'qrCode' is set
      if (qrCode == undefined || qrCode == null) {
        throw "Missing the required parameter 'qrCode' when calling scanCodeUsingPOST";
      }


      var pathParams = {
      };
      var queryParams = {
        'qrCode': qrCode
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2-password'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/api/agent_manage/scan_code', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
